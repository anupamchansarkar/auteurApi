{"version":3,"sources":["webpack:///./src/app/views/forms/basic-form/basic-form.component.css","webpack:///./src/app/views/forms/basic-form/basic-form.component.html","webpack:///./src/app/views/forms/basic-form/basic-form.component.ts","webpack:///./src/app/views/forms/file-upload/file-upload.component.css","webpack:///./src/app/views/forms/file-upload/file-upload.component.html","webpack:///./src/app/views/forms/file-upload/file-upload.component.ts","webpack:///./src/app/views/forms/forms.module.ts","webpack:///./src/app/views/forms/forms.routing.ts","webpack:///./src/app/views/forms/rich-text-editor/rich-text-editor.component.css","webpack:///./src/app/views/forms/rich-text-editor/rich-text-editor.component.html","webpack:///./src/app/views/forms/rich-text-editor/rich-text-editor.component.ts","webpack:///./src/app/views/forms/wizard/wizard.component.css","webpack:///./src/app/views/forms/wizard/wizard.component.html","webpack:///./src/app/views/forms/wizard/wizard.component.ts"],"names":[],"mappings":"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","file":"views-forms-forms-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2Zvcm1zL2Jhc2ljLWZvcm0vYmFzaWMtZm9ybS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-card class=\\\"p-0\\\">\\n    <mat-card-title class=\\\"\\\">\\n        <div class=\\\"card-title-text\\\">Form validation</div>\\n        <mat-divider></mat-divider>\\n    </mat-card-title>\\n    <mat-card-content>\\n        <form [formGroup]=\\\"basicForm\\\">\\n            <div fxLayout=\\\"row wrap\\\">\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"pr-1\\\">\\n                    <div class=\\\"pb-1\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input\\n                            matInput\\n                            name=\\\"username\\\"\\n                            formControlName=\\\"username\\\"\\n                            placeholder=\\\"Username (Min Length: 4, Max Length: 9)\\\"\\n                            value=\\\"\\\">\\n                        </mat-form-field>\\n                        <small \\n                        *ngIf=\\\"basicForm.controls['username'].hasError('minlength') && basicForm.controls['username'].touched\\\" \\n                        class=\\\"form-error-msg\\\"> Username require at least {{basicForm.controls['username'].errors.minlength.requiredLength}} characters </small>\\n                        <small \\n                        *ngIf=\\\"basicForm.controls['username'].hasError('maxlength') && basicForm.controls['username'].touched\\\" \\n                        class=\\\"form-error-msg\\\"> Username can not contain more than {{basicForm.controls['username'].errors.maxlength.requiredLength}} characters </small>\\n                    </div>\\n\\n                    <div class=\\\"pb-1\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input\\n                            matInput\\n                            name=\\\"firstname\\\"\\n                            formControlName=\\\"firstname\\\"\\n                            placeholder=\\\"First name\\\"\\n                            value=\\\"\\\">\\n                        </mat-form-field>\\n                        <small \\n                        *ngIf=\\\"basicForm.controls['firstname'].hasError('required') && basicForm.controls['firstname'].touched\\\" \\n                        class=\\\"form-error-msg\\\"> First name is required </small>\\n                    </div>\\n\\n                    <div class=\\\"pb-1\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                        <input\\n                            matInput\\n                            type=\\\"email\\\"\\n                            name=\\\"email\\\"\\n                            formControlName=\\\"email\\\"\\n                            placeholder=\\\"Your Email\\\"\\n                            value=\\\"\\\">\\n                        </mat-form-field>\\n                        <small \\n                        *ngIf=\\\"basicForm.controls['email'].hasError('required') && basicForm.controls['email'].touched\\\" \\n                        class=\\\"form-error-msg\\\"> Email is required </small>\\n                        <small \\n                        *ngIf=\\\"basicForm.controls['email'].hasError('email') && basicForm.controls['email'].touched\\\" \\n                        class=\\\"form-error-msg\\\"> Invaild email address </small>\\n                    </div>\\n\\n                    <div class=\\\"pb-1\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                        <input\\n                            matInput\\n                            name=\\\"website\\\"\\n                            formControlName=\\\"website\\\"\\n                            placeholder=\\\"Your Website (http://mhrafi.com)\\\"\\n                            value=\\\"\\\">\\n                        </mat-form-field>\\n                        <small \\n                        *ngIf=\\\"basicForm.controls['website'].hasError('url') && basicForm.controls['website'].touched\\\" \\n                        class=\\\"form-error-msg\\\"> Invaild web address </small>\\n                    </div>\\n\\n                    <div class=\\\"pb-1\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input \\n                            matInput\\n                            name=\\\"date\\\"\\n                            formControlName=\\\"date\\\"\\n                            placeholder=\\\"Date\\\" \\n                            [matDatepicker]=\\\"appDatepicker\\\">\\n                            \\n                            <mat-datepicker-toggle matSuffix [for]=\\\"appDatepicker\\\"></mat-datepicker-toggle>\\n                        </mat-form-field>\\n                        <mat-datepicker #appDatepicker></mat-datepicker>\\n                    </div>\\n                </div>\\n\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\">\\n                    <div class=\\\"pb-1\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input \\n                            matInput\\n                            name=\\\"cardno\\\"\\n                            formControlName=\\\"cardno\\\"\\n                            placeholder=\\\"Credit card number\\\">\\n                        </mat-form-field>\\n                        <small \\n                        *ngIf=\\\"basicForm.controls['cardno'].hasError('creditCard') && basicForm.controls['cardno'].touched\\\" \\n                        class=\\\"form-error-msg\\\"> Invaild card number </small>\\n                    </div>\\n\\n                    <div class=\\\"pb-1\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input \\n                            matInput\\n                            name=\\\"phone\\\"\\n                            formControlName=\\\"phone\\\"\\n                            placeholder=\\\"Phone number\\\">\\n                        </mat-form-field>\\n                        <small \\n                        *ngIf=\\\"basicForm.controls['phone'].hasError('phone') && basicForm.controls['phone'].touched\\\" \\n                        class=\\\"form-error-msg\\\"> Invaild phone number </small>\\n                    </div>\\n\\n                    <div class=\\\"pb-1\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                        <input \\n                            type=\\\"password\\\"\\n                            name=\\\"password\\\"\\n                            matInput\\n                            formControlName=\\\"password\\\"\\n                            placeholder=\\\"Password\\\" \\n                            value=\\\"\\\">\\n                        </mat-form-field>\\n                        <small \\n                        *ngIf=\\\"basicForm.controls['password'].hasError('required') && basicForm.controls['password'].touched\\\" \\n                        class=\\\"form-error-msg\\\"> Password is required </small>\\n                    </div>\\n\\n                    <div class=\\\"pb-1\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                        <input\\n                            type=\\\"password\\\"\\n                            name=\\\"confirmPassword\\\"\\n                            matInput\\n                            appEqualValidator=\\\"password\\\"\\n                            formControlName=\\\"confirmPassword\\\"\\n                            placeholder=\\\"Confirm Password\\\"\\n                            value=\\\"\\\">\\n                        </mat-form-field>\\n                        <small \\n                        *ngIf=\\\"basicForm.controls['confirmPassword'].hasError('equalTo')\\\" \\n                        class=\\\"form-error-msg\\\"> Password mismatch </small>\\n                    </div>\\n\\n                    <div class=\\\"pb-1\\\">\\n                        <Label>Gender*</Label>\\n                        <mat-radio-group \\n                        name=\\\"gender\\\" \\n                        formControlName=\\\"gender\\\">\\n                            <mat-radio-button value=\\\"male\\\">Male</mat-radio-button>\\n                            <mat-radio-button value=\\\"female\\\">Female</mat-radio-button>\\n                        </mat-radio-group>\\n                    </div>\\n                    \\n                    <div class=\\\"pb-1 pt-05\\\">\\n                        <mat-checkbox\\n                        name=\\\"agreed\\\"\\n                        formControlName=\\\"agreed\\\" \\n                        class=\\\"pb-1\\\">I have read and agree to the terms of service.</mat-checkbox>\\n\\n                        <small \\n                            *ngIf=\\\"basicForm.controls['agreed'].hasError('agreed') && basicForm.controls['agreed'].touched\\\" \\n                            class=\\\"form-error-msg\\\"> You must agree to the terms and conditions </small>\\n                    </div>\\n                </div>\\n            </div>\\n            <button \\n            mat-raised-button \\n            color=\\\"primary\\\" \\n            [disabled]=\\\"basicForm.invalid\\\">Submit</button>\\n        </form>\\n    </mat-card-content>\\n</mat-card>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\n\n@Component({\n  selector: 'app-basic-form',\n  templateUrl: './basic-form.component.html',\n  styleUrls: ['./basic-form.component.css']\n})\nexport class BasicFormComponent implements OnInit {\n  formData = {}\n  console = console;\n  basicForm: FormGroup;\n\n  constructor() { }\n\n  ngOnInit() {\n    let password = new FormControl('', Validators.required);\n    let confirmPassword = new FormControl('', CustomValidators.equalTo(password));\n\n    this.basicForm = new FormGroup({\n      username: new FormControl('', [\n        Validators.minLength(4),\n        Validators.maxLength(9)\n      ]),\n      firstname: new FormControl('', [\n        Validators.required\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ]),\n      website: new FormControl('', CustomValidators.url),\n      date: new FormControl(),\n      cardno: new FormControl('', [\n        CustomValidators.creditCard\n      ]),\n      phone: new FormControl('', CustomValidators.phone('BD')),\n      password: password,\n      confirmPassword: confirmPassword,\n      gender: new FormControl('', [\n        Validators.required\n      ]),\n      agreed: new FormControl('', (control: FormControl) => {\n        const agreed = control.value;\n        if(!agreed) {\n          return { agreed: true }\n        }\n        return null;\n      })\n    })\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2Zvcm1zL2ZpbGUtdXBsb2FkL2ZpbGUtdXBsb2FkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-card class=\\\"p-0\\\">\\n  <mat-card-title class=\\\"\\\">\\n    <div class=\\\"card-title-text\\\">File upload</div>\\n    <mat-divider></mat-divider>\\n  </mat-card-title>\\n  <mat-card-content>\\n      <div class=\\\"mb-1\\\">\\n        <p>Multiple</p>\\n        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple  /><br/>\\n\\n        <p>Single</p>\\n        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n      </div>\\n\\n      <div class=\\\"mb-1\\\">\\n        <div ng2FileDrop\\n        [ngClass]=\\\"{'dz-file-over': hasBaseDropZoneOver}\\\"\\n        (fileOver)=\\\"fileOverBase($event)\\\"\\n        [uploader]=\\\"uploader\\\"\\n        class=\\\"fileupload-drop-zone mb-24\\\">\\n        Drop file here\\n        </div>\\n      </div>\\n\\n      <table class=\\\"default-table mat-box-shadow mb-24\\\" style=\\\"width: 100%\\\">\\n        <thead>\\n        <tr>\\n            <th width=\\\"30%\\\">Name</th>\\n            <th>Size</th>\\n            <th>Progress</th>\\n            <th>Status</th>\\n            <th>Actions</th>\\n        </tr>\\n        </thead>\\n        <tbody *ngIf=\\\"uploader.queue.length; else tableNoData\\\">\\n        <tr *ngFor=\\\"let item of uploader.queue\\\">\\n            <td>{{ item?.file?.name }}</td>\\n            <td nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n            <td>\\n                <div class=\\\"progress\\\" style=\\\"margin-bottom: 0;\\\">\\n                    <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': item.progress + '%' }\\\"></div>\\n                    <mat-progress-bar\\n                      class=\\\"\\\"\\n                      color=\\\"primary\\\"\\n                      mode=\\\"determinate\\\"\\n                      [value]=\\\"item.progress\\\">\\n                    </mat-progress-bar>\\n                </div>\\n            </td>\\n            <td class=\\\"\\\">\\n                <mat-icon *ngIf=\\\"item.isSuccess\\\" color=\\\"primary\\\">check</mat-icon>\\n                <mat-icon *ngIf=\\\"item.isCancel\\\" color=\\\"accent\\\">cancel</mat-icon>\\n                <mat-icon *ngIf=\\\"item.isError\\\" color=\\\"warn\\\">error</mat-icon>\\n            </td>\\n            <td nowrap>\\n                <button \\n                mat-raised-button\\n                color=\\\"primary\\\"\\n                class=\\\"mx-4\\\"\\n                (click)=\\\"item.upload()\\\"\\n                [disabled]=\\\"item.isReady || item.isUploading || item.isSuccess\\\">Upload</button>\\n                <button \\n                mat-raised-button\\n                color=\\\"accent\\\"\\n                class=\\\"mx-4\\\"\\n                (click)=\\\"item.cancel()\\\"\\n                [disabled]=\\\"!item.isUploading\\\">Cancel</button>\\n\\n                <button \\n                mat-raised-button\\n                color=\\\"warn\\\"\\n                class=\\\"mx-4\\\"\\n                (click)=\\\"item.remove()\\\">Remove</button>\\n            </td>\\n        </tr>\\n        </tbody>\\n        <ng-template #tableNoData>\\n          <p [ngStyle]=\\\"{padding: '0 1.2rem'}\\\">Queue is empty</p>\\n        </ng-template>\\n    </table>\\n\\n\\n      <div>\\n        <p>Queue progress:</p>\\n        <div class=\\\"progress mb-1\\\" >\\n            <mat-progress-bar\\n              class=\\\"\\\"\\n              color=\\\"primary\\\"\\n              mode=\\\"determinate\\\"\\n              [value]=\\\"uploader.progress\\\">\\n            </mat-progress-bar>\\n        </div>\\n\\n      <button \\n      mat-raised-button\\n      color=\\\"primary\\\"\\n      class=\\\"mx-4\\\"\\n      (click)=\\\"uploader.uploadAll()\\\"\\n      [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">Upload all</button>\\n\\n      <button \\n      mat-raised-button\\n      color=\\\"accent\\\"\\n      class=\\\"mx-4\\\"\\n      (click)=\\\"uploader.cancelAll()\\\"\\n      [disabled]=\\\"!uploader.isUploading\\\">Cancel all</button>\\n\\n      <button \\n      mat-raised-button\\n      color=\\\"warn\\\"\\n      class=\\\"mx-4\\\"\\n      (click)=\\\"uploader.clearQueue()\\\"\\n      [disabled]=\\\"!uploader.queue.length\\\">Remove all</button>\\n    </div>\\n  </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css']\n})\nexport class FileUploadComponent implements OnInit {\n  public uploader: FileUploader = new FileUploader({ url: 'https://evening-anchorage-315.herokuapp.com/api/' });\n  public hasBaseDropZoneOver: boolean = false;\n  console = console;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  public fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { \n  MatInputModule,\n  MatDatepickerModule, \n  MatNativeDateModule,\n  MatListModule,\n  MatCardModule,\n  MatProgressBarModule,\n  MatRadioModule,\n  MatCheckboxModule,\n  MatButtonModule,\n  MatIconModule,\n  MatStepperModule\n} from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { QuillModule } from 'ngx-quill';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { FileUploadModule } from 'ng2-file-upload/ng2-file-upload';\n\nimport { BasicFormComponent } from './basic-form/basic-form.component';\nimport { RichTextEditorComponent } from './rich-text-editor/rich-text-editor.component';\nimport { FileUploadComponent } from './file-upload/file-upload.component';\n\nimport { FormsRoutes } from \"./forms.routing\";\nimport { WizardComponent } from './wizard/wizard.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatListModule,\n    MatCardModule,\n    MatDatepickerModule, \n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatRadioModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatIconModule,\n    MatStepperModule,\n    FlexLayoutModule,\n    QuillModule,\n    NgxDatatableModule,\n    FileUploadModule,\n    RouterModule.forChild(FormsRoutes)\n  ],\n  declarations: [BasicFormComponent, RichTextEditorComponent, FileUploadComponent, WizardComponent]\n})\nexport class AppFormsModule { }","import { Routes } from '@angular/router';\n\nimport { BasicFormComponent } from './basic-form/basic-form.component';\nimport { RichTextEditorComponent } from './rich-text-editor/rich-text-editor.component';\nimport { FileUploadComponent } from './file-upload/file-upload.component';\nimport { WizardComponent } from './wizard/wizard.component';\n\nexport const FormsRoutes: Routes = [\n  {\n    path: '',\n    children: [{\n      path: 'basic',\n      component: BasicFormComponent,\n      data: { title: 'Basic', breadcrumb: 'BASIC' }\n    }, {\n      path: 'editor',\n      component: RichTextEditorComponent,\n      data: { title: 'Editor', breadcrumb: 'EDITOR' }\n    }, {\n      path: 'upload',\n      component: FileUploadComponent,\n      data: { title: 'Upload', breadcrumb: 'UPLOAD' }\n    }, {\n      path: 'wizard',\n      component: WizardComponent,\n      data: { title: 'Wizard', breadcrumb: 'WIZARD' }\n    }]\n  }\n];","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2Zvcm1zL3JpY2gtdGV4dC1lZGl0b3IvcmljaC10ZXh0LWVkaXRvci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-card class=\\\"p-0\\\">\\n  \\n  <mat-card-content class=\\\"p-0\\\">\\n    <quill-editor \\n    theme=\\\"snow\\\" \\n    [(ngModel)]=\\\"editorData\\\" \\n    (onContentChanged)=\\\"onContentChanged()\\\" \\n    onSelectionChanged=\\\"onSelectionChanged()\\\"></quill-editor>\\n  </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rich-text-editor',\n  templateUrl: './rich-text-editor.component.html',\n  styleUrls: [\n    './rich-text-editor.component.css'\n  ]\n})\nexport class RichTextEditorComponent implements OnInit {\n\n  editorData = `<h1>Egret | Angular material admin</h1>\n  <p><a href=\"http://devegret.com\" target=\"_blank\"><strong>DevEgret</strong></a></p>\n  <p><br></p><p><strong >Lorem Ipsum</strong>\n  <span>&nbsp;is simply dummy text of the printing and typesetting industry. \n  Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a \n  galley of type and scrambled it to make a type specimen book. It has survived not only five centuries</span></p>`;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onContentChanged() { }\n  onSelectionChanged() { }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2Zvcm1zL3dpemFyZC93aXphcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-card class=\\\"p-0\\\">\\n  <mat-card-title class=\\\"\\\">\\n    <div class=\\\"card-title-text\\\">Horizontal</div>\\n    <mat-divider></mat-divider>\\n  </mat-card-title>\\n  <mat-card-content>\\n    <mat-horizontal-stepper [linear]=\\\"true\\\">\\n      <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n        <form [formGroup]=\\\"firstFormGroup\\\">\\n          <ng-template matStepLabel>Fill out your name</ng-template>\\n          <mat-form-field class=\\\"pt-1 pb-1\\\">\\n            <input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\n          </mat-form-field>\\n          <div>\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\n          </div>\\n        </form>\\n      </mat-step>\\n      <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n        <form [formGroup]=\\\"secondFormGroup\\\">\\n          <ng-template matStepLabel>Fill out your address</ng-template>\\n          <mat-form-field class=\\\"pt-1 pb-1\\\">\\n            <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\n          </mat-form-field>\\n          <div fxLayout=\\\"row\\\">\\n            <button mat-raised-button color=\\\"accent\\\" matStepperPrevious>Back</button>\\n            <span fxFlex=\\\"8px\\\"></span>\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\n          </div>\\n        </form>\\n      </mat-step>\\n      <mat-step>\\n        <ng-template matStepLabel>Done</ng-template>\\n        <div>\\n          <mat-icon class=\\\"pt-1\\\" [style.fontSize]=\\\"'36px'\\\">check</mat-icon>\\n        </div>\\n        <div class=\\\"pb-1 mb-1\\\"> You Are Done.</div>\\n        <div fxLayout=\\\"row\\\">\\n          <button mat-raised-button color=\\\"accent\\\" matStepperPrevious>Back</button>\\n          <span fxFlex=\\\"8px\\\"></span>\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"submit()\\\">Submit</button>\\n        </div>\\n      </mat-step>\\n    </mat-horizontal-stepper>\\n  </mat-card-content>\\n</mat-card>\\n\\n<mat-card class=\\\"p-0\\\">\\n  <mat-card-title class=\\\"\\\">\\n    <div class=\\\"card-title-text\\\">Verticle</div>\\n    <mat-divider></mat-divider>\\n  </mat-card-title>\\n  <mat-card-content>\\n    <mat-vertical-stepper [linear]=\\\"true\\\">\\n      <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n        <form [formGroup]=\\\"firstFormGroup\\\">\\n          <ng-template matStepLabel>Fill out your name</ng-template>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\n          </mat-form-field>\\n          <div>\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\n          </div>\\n        </form>\\n      </mat-step>\\n      <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n        <form [formGroup]=\\\"secondFormGroup\\\">\\n          <ng-template matStepLabel>Fill out your address</ng-template>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\n          </mat-form-field>\\n          <div fxLayout=\\\"row\\\">\\n            <button mat-raised-button color=\\\"accent\\\" matStepperPrevious>Back</button>\\n            <span fxFlex=\\\"8px\\\"></span>\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\n          </div>\\n        </form>\\n      </mat-step>\\n      <mat-step>\\n        <ng-template matStepLabel>Done</ng-template>\\n        <div>\\n          <mat-icon class=\\\"pt-1\\\" [style.fontSize]=\\\"'36px'\\\">check</mat-icon>\\n        </div>\\n        <div class=\\\"pb-1 mb-1\\\"> You Are Done.</div>\\n        <div>\\n          <button mat-raised-button color=\\\"accent\\\" matStepperPrevious>Back</button>\\n        </div>\\n      </mat-step>\\n    </mat-vertical-stepper>\\n  </mat-card-content>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-wizard',\n  templateUrl: './wizard.component.html',\n  styleUrls: ['./wizard.component.css']\n})\nexport class WizardComponent implements OnInit {\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.firstFormGroup = this.fb.group({\n      firstCtrl: ['', Validators.required]\n    });\n    this.secondFormGroup = this.fb.group({\n      secondCtrl: ['', Validators.required]\n    });\n  }\n  \n  submit() {\n    console.log(this.firstFormGroup.value);\n    console.log(this.secondFormGroup.value);\n  }\n}\n"],"sourceRoot":""}