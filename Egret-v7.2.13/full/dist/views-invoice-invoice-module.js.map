{"version":3,"sources":["webpack:///./src/app/views/invoice/invoice-details/invoice-details.component.html","webpack:///./src/app/views/invoice/invoice-details/invoice-details.component.scss","webpack:///./src/app/views/invoice/invoice-details/invoice-details.component.ts","webpack:///./src/app/views/invoice/invoice-list/invoice-list.component.html","webpack:///./src/app/views/invoice/invoice-list/invoice-list.component.scss","webpack:///./src/app/views/invoice/invoice-list/invoice-list.component.ts","webpack:///./src/app/views/invoice/invoice-routing.module.ts","webpack:///./src/app/views/invoice/invoice.module.ts","webpack:///./src/app/views/invoice/invoice.service.ts"],"names":[],"mappings":"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","file":"views-invoice-invoice-module.js","sourcesContent":["module.exports = \"<!-- Edit Invoice -->\\n<mat-card *ngIf=\\\"showEditOption\\\">\\n  <form [formGroup]=\\\"invoiceForm\\\" (ngSubmit)=\\\"saveInvoice()\\\">\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n      <button\\n        mat-button\\n        type=\\\"button\\\"\\n        class=\\\"ml-1 mr-1\\\"\\n        *ngIf=\\\"!isLoading\\\"\\n        (click)=\\\"showEditOption = !showEditOption\\\"\\n      >\\n        Cancel\\n      </button>\\n\\n      <button-loading\\n        [loadingText]=\\\"'Saving...'\\\"\\n        color=\\\"primary\\\"\\n        [type]=\\\"'submit'\\\"\\n        [loading]=\\\"isLoading\\\"\\n        >Save</button-loading\\n      >\\n    </div>\\n\\n    <!-- order details -->\\n    <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between\\\" class=\\\"order-info\\\">\\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"33.33%\\\">\\n        <h4><strong>Order Info</strong></h4>\\n        <p>Order Number</p>\\n        <mat-form-field>\\n          <input\\n            formControlName=\\\"orderNo\\\"\\n            matInput\\n            required\\n            placeholder=\\\"Order No.\\\"\\n          />\\n        </mat-form-field>\\n      </div>\\n\\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"33.33%\\\" fxLayoutGap=\\\"20px\\\">\\n        <div>\\n          <mat-radio-group\\n            formControlName=\\\"status\\\"\\n            fxLayout=\\\"column\\\"\\n            fxLayoutAlign=\\\"end end\\\"\\n            fxLayoutGap=\\\"5px\\\"\\n            required\\n          >\\n            <mat-radio-button labelPosition=\\\"before\\\" value=\\\"pending\\\"\\n              >Pending</mat-radio-button\\n            >\\n            <mat-radio-button labelPosition=\\\"before\\\" value=\\\"processing\\\"\\n              >Processing</mat-radio-button\\n            >\\n            <mat-radio-button labelPosition=\\\"before\\\" value=\\\"delivered\\\"\\n              >Delivered</mat-radio-button\\n            >\\n          </mat-radio-group>\\n        </div>\\n\\n        <div>\\n          <p class=\\\"align-right\\\">Order Date</p>\\n          <mat-form-field fxFill>\\n            <input\\n              matInput\\n              [matDatepicker]=\\\"picker\\\"\\n              required\\n              placeholder=\\\"Choose a date\\\"\\n              formControlName=\\\"date\\\"\\n            />\\n            <mat-datepicker-toggle\\n              matSuffix\\n              [for]=\\\"picker\\\"\\n            ></mat-datepicker-toggle>\\n            <mat-datepicker #picker></mat-datepicker>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- end of order details -->\\n\\n    <mat-divider></mat-divider>\\n\\n    <!-- billing details -->\\n    <div\\n      class=\\\"billing-address\\\"\\n      fxLayout=\\\"row wrap\\\"\\n      fxLayoutAlign=\\\"space-between center\\\"\\n    >\\n      <!-- seller -->\\n      <div\\n        formGroupName=\\\"seller\\\"\\n        fxLayout=\\\"column\\\"\\n        fxLayoutGap=\\\"20px\\\"\\n        fxFlex=\\\"33.33%\\\"\\n      >\\n        <h4><strong>Bill From</strong></h4>\\n        <mat-form-field>\\n          <input\\n            formControlName=\\\"name\\\"\\n            matInput\\n            required\\n            placeholder=\\\"Name of Seller\\\"\\n          />\\n        </mat-form-field>\\n        <mat-form-field>\\n          <textarea\\n            formControlName=\\\"address\\\"\\n            matInput\\n            required\\n            matTextareaAutosize\\n            placeholder=\\\"Address of Seller\\\"\\n          ></textarea>\\n        </mat-form-field>\\n      </div>\\n\\n      <!-- buyer -->\\n      <div\\n        formGroupName=\\\"buyer\\\"\\n        fxLayout=\\\"column\\\"\\n        fxLayoutAlign=\\\"center end\\\"\\n        fxLayoutGap=\\\"20px\\\"\\n        fxFlex=\\\"33.33%\\\"\\n      >\\n        <h4><strong>Bill To</strong></h4>\\n        <mat-form-field fxFill>\\n          <input\\n            formControlName=\\\"name\\\"\\n            matInput\\n            required\\n            placeholder=\\\"Name of Buyer\\\"\\n          />\\n        </mat-form-field>\\n        <mat-form-field fxFill>\\n          <textarea\\n            formControlName=\\\"address\\\"\\n            matInput\\n            required\\n            matTextareaAutosize\\n            placeholder=\\\"Address of Buyer\\\"\\n          ></textarea>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n    <!-- end of billing details -->\\n\\n    <!-- item form table -->\\n    <div formArrayName=\\\"item\\\" class=\\\"item-form-list\\\" fxLayout=\\\"column\\\">\\n      <div\\n        class=\\\"item-form-list-head-line\\\"\\n        fxLayout=\\\"row\\\"\\n        fxLayoutAlign=\\\"space-around center\\\"\\n      >\\n        <p>#</p>\\n        <p>Item Name</p>\\n        <p>Unit Price</p>\\n        <p>Unit</p>\\n        <p>Cost</p>\\n        <p></p>\\n      </div>\\n\\n      <div\\n        *ngFor=\\\"let item of invoiceItemFormArray.controls; let i = index\\\"\\n        [formGroup]=\\\"item\\\"\\n        class=\\\"form-rows\\\"\\n        fxLayout=\\\"row\\\"\\n        fxLayoutAlign=\\\"space-around center\\\"\\n      >\\n        <span>{{ i + 1 }}</span>\\n        <mat-form-field>\\n          <input\\n            formControlName=\\\"name\\\"\\n            matInput\\n            placeholder=\\\"Item Name\\\"\\n            #name\\n            required\\n          />\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input\\n            type=\\\"number\\\"\\n            formControlName=\\\"price\\\"\\n            matInput\\n            placeholder=\\\"Item Price\\\"\\n            #price\\n            required\\n          />\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input\\n            type=\\\"number\\\"\\n            formControlName=\\\"unit\\\"\\n            matInput\\n            placeholder=\\\"Item Unit\\\"\\n            #unit\\n            required\\n          />\\n        </mat-form-field>\\n        <span>{{ unit.value * price.value }}</span>\\n        <button mat-button type=\\\"button\\\" (click)=\\\"deleteItemFromInvoice(i)\\\">\\n          Delete\\n        </button>\\n      </div>\\n      <!-- end of item form table -->\\n\\n      <!-- add item button -->\\n      <div class=\\\"add-button\\\">\\n        <button mat-button type=\\\"button\\\" (click)=\\\"addNewItem(emptyFormObject)\\\">\\n          Add Item\\n        </button>\\n      </div>\\n    </div>\\n\\n    <!-- total cost of item form -->\\n    <div\\n      class=\\\"form-total-cost\\\"\\n      fxLayout=\\\"column\\\"\\n      fxLayoutAlign=\\\"center end\\\"\\n      fxLayoutGap=\\\"10px\\\"\\n    >\\n      <!-- sub total -->\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n        <span>Sub Total:</span>\\n        <span>{{ currency }}{{ cost }}</span>\\n      </div>\\n\\n      <!-- vat -->\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n        <span>Vat(%):</span>\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"end center\\\">\\n          <mat-form-field>\\n            <input\\n              type=\\\"number\\\"\\n              formControlName=\\\"vat\\\"\\n              matInput\\n              placeholder=\\\"vat\\\"\\n              required\\n            />\\n          </mat-form-field>\\n          <span>{{ currency }}{{ vat }}</span>\\n        </div>\\n      </div>\\n\\n      <!-- grand total -->\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n        <h5><strong>Grand Total: </strong></h5>\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"end center\\\">\\n          <mat-form-field>\\n            <input\\n              formControlName=\\\"currency\\\"\\n              matInput\\n              placeholder=\\\"currency\\\"\\n              required\\n            />\\n          </mat-form-field>\\n          <h5>\\n            <strong>{{ currency }}{{ cost + vat }}</strong>\\n          </h5>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- end of total cost -->\\n  </form>\\n</mat-card>\\n<!-- end of edit invoice -->\\n<!-- =================================================== -->\\n\\n<!-- =================================================== -->\\n<!-- invoice details -->\\n<mat-card *ngIf=\\\"!showEditOption\\\" class=\\\"invoice-details\\\">\\n  <div fxLayout=\\\"row\\\">\\n    <button mat-icon-button routerLink=\\\"/invoice/list\\\">\\n      <mat-icon>arrow_back</mat-icon>\\n    </button>\\n    <span fxFlex></span>\\n\\n    <button\\n      mat-flat-button\\n      color=\\\"primary\\\"\\n      class=\\\"ml-1 mr-1\\\"\\n      (click)=\\\"showEditOption = !showEditOption\\\"\\n    >\\n      Edit Invoice\\n    </button>\\n    <button mat-flat-button color=\\\"accent\\\" (click)=\\\"print()\\\">\\n      Print Invoice\\n    </button>\\n  </div>\\n  <div id=\\\"print-area\\\">\\n    <!-- order details -->\\n    <div class=\\\"order-info\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n      <div>\\n        <h4><strong>Order Info</strong></h4>\\n        <p>Order Number</p>\\n        <p># {{ invoice?.orderNo }}</p>\\n      </div>\\n\\n      <div>\\n        <p><strong>Order status: </strong> {{ invoice?.status }}</p>\\n        <p><strong>Order date: </strong> {{ invoice?.date | date }}</p>\\n      </div>\\n    </div>\\n    <!-- end of order details -->\\n\\n    <mat-divider></mat-divider>\\n\\n    <!-- billing details -->\\n    <div class=\\\"billing-address\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n      <!-- seller -->\\n      <div>\\n        <h4><strong>Bill From</strong></h4>\\n        <p>{{ invoice?.seller?.name }}</p>\\n        <p>{{ invoice?.seller?.address }}</p>\\n      </div>\\n\\n      <!-- buyer -->\\n      <div>\\n        <h4><strong>Bill To</strong></h4>\\n        <p>{{ invoice?.buyer?.name }}</p>\\n        <p>{{ invoice?.buyer?.address }}</p>\\n      </div>\\n    </div>\\n    <!-- end of billing details -->\\n\\n    <!-- item table -->\\n    <div class=\\\"item-table\\\">\\n      <mat-table [dataSource]=\\\"invoice.item\\\" class=\\\"mat-elevation-z4\\\" #table>\\n        <!-- Number Column -->\\n        <ng-container matColumnDef=\\\"{{ itemTableColumn[0] }}\\\">\\n          <mat-header-cell *matHeaderCellDef> # </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element; let i = index\\\">\\n            {{ i + 1 }}\\n          </mat-cell>\\n        </ng-container>\\n\\n        <!-- Item Name Column -->\\n        <ng-container matColumnDef=\\\"{{ itemTableColumn[1] }}\\\">\\n          <mat-header-cell *matHeaderCellDef>\\n            {{ itemTableColumn[1] }}\\n          </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{ element.name }} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Unit price Column -->\\n        <ng-container matColumnDef=\\\"{{ itemTableColumn[2] }}\\\">\\n          <mat-header-cell *matHeaderCellDef>\\n            {{ itemTableColumn[2] }}\\n          </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{ element.price }} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Unit Column -->\\n        <ng-container matColumnDef=\\\"{{ itemTableColumn[3] }}\\\">\\n          <mat-header-cell *matHeaderCellDef>\\n            {{ itemTableColumn[3] }}\\n          </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{ element.unit }} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Cost column -->\\n        <ng-container matColumnDef=\\\"{{ itemTableColumn[4] }}\\\">\\n          <mat-header-cell *matHeaderCellDef>\\n            {{ itemTableColumn[4] }}\\n          </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\">\\n            {{ element.unit * element.price }}\\n          </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef=\\\"itemTableColumn\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: itemTableColumn\\\"></mat-row>\\n      </mat-table>\\n    </div>\\n    <!-- end of table -->\\n\\n    <!-- total cost -->\\n    <div\\n      class=\\\"total-cost\\\"\\n      fxLayout=\\\"row\\\"\\n      fxLayoutAlign=\\\"end\\\"\\n      fxLayoutGap=\\\"50px\\\"\\n    >\\n      <div>\\n        <p>Sub Total:</p>\\n        <p>Vat:</p>\\n        <h5><strong>Grand Total: </strong></h5>\\n      </div>\\n\\n      <div>\\n        <p>{{ currency }}{{ cost }}</p>\\n        <p>{{ currency }}{{ vat.toFixed(2) }}</p>\\n        <h5>\\n          <strong>{{ currency }}{{ (cost + vat).toFixed(2) }}</strong>\\n        </h5>\\n      </div>\\n    </div>\\n    <!-- end of total cost -->\\n  </div>\\n</mat-card>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2ludm9pY2UvaW52b2ljZS1kZXRhaWxzL2ludm9pY2UtZGV0YWlscy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Subscription } from 'rxjs';\nimport { FormGroup, FormArray, FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from \"@angular/core\";\nimport { InvoiceService } from \"../invoice.service\";\nimport { Invoice, InvoiceItem } from 'app/shared/models/invoice.model';\n\n@Component({\n  selector: \"app-invoice-details\",\n  templateUrl: \"./invoice-details.component.html\",\n  styleUrls: [\"./invoice-details.component.scss\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n\n})\nexport class InvoiceDetailsComponent implements OnInit {\n  cost: number = 0;\n  vat: number = 0;\n  currency: string = '$';\n  showEditOption: boolean = false;\n  isLoading = false;\n  invoiceForm: FormGroup;\n  invoiceFormSub: Subscription;\n  invocieId: number;\n  invoice: Invoice = {\n    item: []\n  };\n\n  emptyFormObject: InvoiceItem = {\n    name: \"\",\n    price: null,\n    unit: null\n  };\n\n  itemTableColumn: string[] = [\n    \"Number\",\n    \"Item Name\",\n    \"Unit Price\",\n    \"Unit\",\n    \"Cost\"\n  ];\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private invoiceService: InvoiceService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.invocieId = this.route.snapshot.params[\"id\"];\n    if (this.invocieId) {\n      this.getInvoice();\n      this.showEditOption = false;\n    } else {\n      this.buildInvoiceForm();\n      this.showEditOption = true;\n    }\n  }\n\n  getInvoice() {\n    this.invoiceService.getInvoiceById(this.invocieId).subscribe((invoice: Invoice) => {\n      this.invoice = invoice;\n      this.buildInvoiceForm(this.invoice);\n      this.calculateCost(this.invoice);\n      this.cdr.markForCheck();\n    });\n  }\n\n  buildInvoiceForm(invoice?: Invoice) {\n    this.invoiceForm = this.fb.group({\n      id: [invoice?invoice.id:''],\n      orderNo: [invoice?invoice.orderNo:''],\n      status: invoice?invoice.status:'',\n      date: invoice?new Date(invoice.date):'',\n      vat: invoice?invoice.vat:0,\n      currency: invoice?invoice.currency:'',\n      seller: this.fb.group({\n        name: [invoice?invoice.seller.name:''],\n        address: [invoice?invoice.seller.address:''],\n      }),\n      buyer: this.fb.group({\n        name: [invoice?invoice.buyer.name:''],\n        address: [invoice?invoice.buyer.address:''],\n      }),\n      item: this.fb.array([])\n    });\n\n    this.invoice.item.forEach(i => {\n      this.addNewItem(i);\n    });\n\n    if(this.invoiceFormSub){\n      this.invoiceFormSub.unsubscribe();\n    }\n\n    this.invoiceFormSub = this.invoiceForm.valueChanges.subscribe(res => {\n      this.calculateCost(res);\n    });\n\n  }\n\n  calculateCost(invoice: Invoice) {\n    this.cost = 0;\n    invoice.item.forEach(element => {\n      this.cost += element.unit * element.price;\n    });\n    this.vat = (invoice.vat * this.cost)/100;\n    this.currency = invoice.currency;\n  }\n\n  addNewItem(item: InvoiceItem) {\n    this.invoiceItemFormArray.push(\n      this.fb.group({\n        name: [item?item.name:''],\n        price: [item?item.price:''],\n        unit: [item?item.unit:'']\n      })\n    );\n  }\n\n  deleteItemFromInvoice(i: number) {\n    this.invoiceItemFormArray.removeAt(i);\n  }\n\n  saveInvoice() {\n    if (this.invoiceForm.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.invoiceService.saveInvoice(this.invoiceForm.value)\n    .subscribe( (res: Invoice) => {\n      this.invoice = this.invoiceForm.value;\n      this.isLoading = false;\n      this.showEditOption = false;\n\n      this.cdr.markForCheck();\n\n      if(res) {\n        this.router.navigateByUrl('/invoice/'+ res.id);\n      }\n    });\n  }\n\n  print() {\n    window.print();\n  }\n\n  get invoiceItemFormArray(): FormArray {\n    return this.invoiceForm.get(\"item\") as FormArray;\n  }\n}\n","module.exports = \"<div class=\\\"m-033\\\">\\n  <button\\n    mat-raised-button\\n    color=\\\"primary\\\"\\n    [routerLink]=\\\"['/invoice/add']\\\"\\n    routerLinkActive=\\\"router-link-active\\\"\\n    style=\\\"margin-bottom: 10px;\\\"\\n  >\\n    Add Invoice\\n  </button>\\n  <mat-table [dataSource]=\\\"invoiceList\\\" class=\\\"mat-elevation-z4\\\" #table>\\n    <!-- Number Column -->\\n    <ng-container matColumnDef=\\\"{{ itemTableColumn[0] }}\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n        {{ itemTableColumn[0] }}\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{ element.orderNo }} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Bill from Column -->\\n    <ng-container matColumnDef=\\\"{{ itemTableColumn[1] }}\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n        {{ itemTableColumn[1] }}\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{ element.seller.name }} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Bill to Column -->\\n    <ng-container matColumnDef=\\\"{{ itemTableColumn[2] }}\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n        {{ itemTableColumn[2] }}\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{ element.buyer.name }} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Status Column -->\\n    <ng-container matColumnDef=\\\"{{ itemTableColumn[3] }}\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n        {{ itemTableColumn[3] }}\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\" style=\\\"text-transform: capitalize;\\\">\\n        {{ element.status }}\\n      </mat-cell>\\n    </ng-container>\\n\\n    <!-- Action column -->\\n    <ng-container matColumnDef=\\\"{{ itemTableColumn[4] }}\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n        {{ itemTableColumn[4] }}\\n      </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\">\\n        <button\\n          mat-button\\n          routerLink=\\\"/invoice/{{ row.id }}\\\"\\n          routerLinkActive=\\\"router-link-active\\\"\\n        >\\n          View\\n        </button>\\n        <button mat-button (click)=\\\"deleteInvoiceById(row.id)\\\">Delete</button>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"itemTableColumn\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: itemTableColumn\\\"></mat-row>\\n  </mat-table>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2ludm9pY2UvaW52b2ljZS1saXN0L2ludm9pY2UtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy } from \"@angular/core\";\nimport { MatTable } from \"@angular/material\";\nimport { InvoiceService } from \"../invoice.service\";\nimport { AppConfirmService } from \"app/shared/services/app-confirm/app-confirm.service\";\nimport { Invoice } from \"app/shared/models/invoice.model\";\n\n@Component({\n  selector: \"app-invoice-list\",\n  templateUrl: \"./invoice-list.component.html\",\n  styleUrls: [\"./invoice-list.component.scss\"]\n})\nexport class InvoiceListComponent implements OnInit {\n  @ViewChild(MatTable) itemTable: MatTable<any>;\n  invoiceList: Invoice[];\n\n  itemTableColumn: string[] = [\n    \"Order No.\",\n    \"Bill From\",\n    \"Bill To\",\n    \"Status\",\n    \"Actions\"\n  ];\n\n  constructor(\n    private invoiceService: InvoiceService,\n    private confirmService: AppConfirmService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.getInvoiceList();\n  }\n\n  getInvoiceList() {\n    this.invoiceService.getInvoiceList()\n    .subscribe((res: Invoice[]) => {\n      this.invoiceList = res;\n      this.cdr.detectChanges();\n    });\n  }\n\n  deleteInvoiceById(id) {\n    this.confirmService\n      .confirm({ title: \"Confirm\", message: \"Are you sure to delete?\" })\n      .subscribe(res => {\n        if (res) {\n          this.invoiceService.deleteInvoice(id).subscribe(e => {\n            this.getInvoiceList();\n          });\n          this.itemTable.renderRows();\n        } else return;\n      });\n  }\n}\n","import { InvoiceListComponent } from \"./invoice-list/invoice-list.component\";\nimport { Component } from \"@angular/core\";\nimport { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { InvoiceDetailsComponent } from \"./invoice-details/invoice-details.component\";\n\nconst routes: Routes = [\n  {\n    path: \"list\",\n    component: InvoiceListComponent,\n    pathMatch: \"full\"\n  },\n  {\n    path: \"add\",\n    component: InvoiceDetailsComponent,\n    pathMatch: \"full\"\n  },\n  {\n    path: \":id\",\n    component: InvoiceDetailsComponent,\n    pathMatch: \"full\"\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InvoiceRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InvoiceRoutingModule } from './invoice-routing.module';\nimport { InvoiceListComponent } from './invoice-list/invoice-list.component';\nimport { InvoiceService } from './invoice.service';\nimport { InvoiceDetailsComponent } from './invoice-details/invoice-details.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { SharedComponentsModule } from 'app/shared/components/shared-components.module';\nimport { SharedMaterialModule } from 'app/shared/shared-material.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    InvoiceRoutingModule,\n    SharedMaterialModule,\n    ReactiveFormsModule,\n    SharedComponentsModule,\n    FlexLayoutModule\n  ],\n  declarations: [InvoiceListComponent, InvoiceDetailsComponent],\n  providers: [InvoiceService]\n})\n\nexport class InvoiceModule { }\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class InvoiceService {\n\n  constructor(private http: HttpClient) { }\n\n  getInvoiceList() {\n    return this.http.get('/api/invoices/');\n  }\n\n  getInvoiceById(id) {\n    return this.http.get('/api/invoices/'+id);\n  }\n  \n  saveInvoice(invoice) {\n    if(invoice.id){\n      return this.http.put('/api/invoices/'+invoice.id, invoice);\n    } else {\n      invoice.id = (Math.random() * 1000000000).toString();\n      return this.http.post('/api/invoices/', invoice);\n    }\n  }\n\n  deleteInvoice(id) {\n    return this.http.delete('/api/invoices/'+id);\n  }\n\n}\n"],"sourceRoot":""}